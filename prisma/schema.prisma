// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                 String        @id @map("_id") @db.ObjectId
  balance            Int           @default(0)
  invoices           Invoice[]
  subscription       Subscription? @relation("member", fields: [subscriptionId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  subscriptionId     String?       @db.ObjectId
  owningSubscription Subscription? @relation("owner")
}

model Subscription {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  expires DateTime @default(now())
  plan    Plan     @relation(fields: [planId], references: [id])
  planId  String   @db.ObjectId
  users   User[]   @relation("member")
  owner   User     @relation("owner", fields: [ownerId], references: [id])
  ownerId String   @unique @db.ObjectId
}

model Plan {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  cost         Int
  duration     Int
  code         String         @unique
  userLimit    Int
  subscription Subscription[]
}

model Invoice {
  id      String        @id @default(auto()) @map("_id") @db.ObjectId
  status  InvoiceStatus @default(created)
  amount  Int
  updated DateTime      @updatedAt
  user    User          @relation(fields: [userId], references: [id])
  userId  String        @db.ObjectId
}

enum InvoiceStatus {
  created
  fulfiled
  canceled
}
